AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  devagent

  Sample SAM Template for devagent triggered via SQS

Globals:
  Function:
    Timeout: 60
    
Parameters:
  DevAgentQueueName:
    Type: String
    Default: "LokiToJarvisQueue"
    Description: "URL of the existing SQS queue for devagent"
  OpenAISecretName:
    Type: String
    Default: "OpenAIAPIKey"
    Description: "Name of the secret in AWS Secrets Manager"
  DevAgentGitPAT:
    Type: String
    Default: "DEV_AGENT_GITHUB_PAT"
    Description: "Name of the secret in AWS Secrets Manager"

Resources:
  DevAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: agent/
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 512
      Architectures:
        - x86_64
      Environment:
        Variables:
          OPENAI_API_KEY: !Sub "{{resolve:secretsmanager:${OpenAISecretName}}}"
          MODEL_NAME: "gpt-4"
          SQS_QUEUE_URL: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${DevAgentQueueName}"
          GITHUB_TOKEN: '{{resolve:secretsmanager:${DevAgentGitPAT}}}'
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${DevAgentQueueName}"
            BatchSize: 5
      Policies:
        - SQSPollerPolicy:
            QueueName: "LokiToJarvisQueue"
        - AWSSecretsManagerGetSecretValuePolicy: 
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${OpenAISecretName}-*"
        - AWSSecretsManagerGetSecretValuePolicy: 
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DevAgentGitPAT}-*"

Outputs:
  DevAgentFunction:
    Description: "Lambda Function ARN triggered via SQS"
    Value: !GetAtt DevAgentFunction.Arn
